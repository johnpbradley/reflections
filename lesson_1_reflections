How did viewing a diff between two version of a file help you see the bug that
was introduced?

The difference between the files is where the bug was introduced, since it's
unlikely that the bug was in code that was working perfectly and hadn't changed

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Seeing the program's progress up to the current point can help you gain
perspective and see what parts of code have been updated much and what's been
possibly neglected.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having version automatically saved, like
Google does?

Pros: you probably have better judgement than the computer as to when to commit
Cons: you're not as reliable as a computer

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately

Git is for programming projects, which tend to use multiple files per project.
Google Docs is more generally used for single filed documents.

How can you use the commands git log and git diff to view the history of files?
git log gets the commit ID's and git diff tells you what they actually did.

How might using version control make you more confident to make changes that
could break something?
Any change can be reverted as far back as when you started using version
control.

Now that you have your workspace set up, what do you want to try using Git for?
All of my future programming projects, and some of my existing ones.
